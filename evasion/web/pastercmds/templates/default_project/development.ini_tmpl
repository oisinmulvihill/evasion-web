#
# ${project} - EvasionWeb Project development environment configuration
#
# The %(here)s variable will be replaced with the parent directory of this file
#
[DEFAULT]
# Disable/Enable debugging. Bad in live environment.
#debug = true
debug = false

# Uncomment and replace with the address which should receive any error reports
#email_to = you@yourdomain.com
smtp_server = localhost
error_email_from = paste@localhost

[server:main]
use = egg:Paste#http
host = 127.0.0.1
port = 6080


[Messenger]
state = 'off'
host = 127.0.0.1
port = 61613
username = 
password = 
channel = evasion


[app:main]
use = egg:evasion-web
full_stack = true
static_files = true


# EvasionWeb App(s) which are used in this project. 
# These are simply a comma separated (no spaces) list 
# of EvasionWeb Apps.
#
# For example:
#
#     web_modules = clientsiteapp,cmsapp,mapapp
#
# If this is empty then you will get the default error page.
#
# Note: EvasionWeb apps a simply python packages. They 
# will need to be in the Python path to be successfully
# loaded and used.
#
web_modules = 

cache_dir = %(here)s/cachedir
beaker.session.key = ${package}
# Change this to some random string
beaker.session.secret = ${package}somesecret

# If you'd like to fine-tune the individual locations of the cache data dirs
# for the Cache data, or the Session saves, un-comment the desired settings
# here:
#beaker.cache.data_dir = %(here)s/cachedir/cache
#beaker.session.data_dir = %(here)s/cachedir/sessions

# SQLAlchemy database URL
#sqlalchemy.url = sqlite:///%(here)s/development.db
#

# EvasionWeb specific configuration:
#
# true: use the default file based users/groups/permissions. Authentication
# and roles/groups are handled using repoze and evasion web plugin to it. 
#
# Default: false (no auth enabled).
#
#enable_default_auth = false

# Enable the default middle ware function. This will be present available
# for use or modification by each app.
#
#enable_default_middleware = true

# Use the default error handling system. This is pylons based error 
# handling by default. Setting this to false will enable you to 
# create your own custom error handler middle ware which an app can
# provide.
#
#enable_default_errorhandling = true


# WARNING: *THE LINE BELOW MUST BE UNCOMMENTED ON A PRODUCTION ENVIRONMENT*
# Debug mode will enable the interactive debugging tool, allowing ANYONE to
# execute malicious code after an exception is raised.
set debug = false


# Logging configuration with option file base log rotation configuration.
#
[loggers]
keys = root, routes, evasion-web, paste

[handlers]
keys = console

[formatters]
keys = generic

[logger_root]
level = DEBUG
handlers = console

[logger_evasion-web]
level = DEBUG
handlers = console
qualname = evasion.web
propagate = 0

[logger_paste]
level = INFO
handlers = console
qualname = paste
propagate = 0

[logger_routes]
level = INFO
handlers =
qualname = routes.middleware
propagate = 0
# "level = DEBUG" logs the route matched and routing variables.


[handler_console]
level = DEBUG
class = StreamHandler
args = (sys.stdout,)
formatter = generic
# Comment out class,args aboce and use the following
# to enable file logging with rotation.
#
#class=handlers.RotatingFileHandler
#args=("${project}.log", "au", 10 * 1024 * 1024, 2)

[formatter_generic]
format = %(asctime)s %(name)s %(levelname)s %(message)s
datefmt = 
